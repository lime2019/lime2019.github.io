(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{628:function(t,e,a){"use strict";a.r(e);var r=a(2),v=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("blockquote",[a("p",[t._v("什么是同源策略？"),a("br"),t._v("\n同源策略（SOP，Same origin policy）是一种约定，由 Netscape 公司 1995 年引入浏览器，它是浏览器最核心也最基本的安全功能，现在所有支持 JavaScript 的浏览器都会使用这个策略。"),a("br"),t._v("\n如果缺少了同源策略，浏览器很容易受到 XSS、 CSFR 等攻击，则浏览器的正常功能可能都会受到影响。可以说Web是构建在同源策略基础之上的，浏览器只是针对同源策略的一种实现。")])]),t._v(" "),a("h2",{attrs:{id:"同源是什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源是什么？"}},[t._v("#")]),t._v(" 同源是什么？")]),t._v(" "),a("p",[t._v("同源指的是："),a("code",[t._v("协议")]),t._v("+"),a("code",[t._v("域名")]),t._v("+"),a("code",[t._v("端口")]),t._v("三者相同，即使两个不同的域名指向同一个IP地址，也是非同源。")]),t._v(" "),a("h2",{attrs:{id:"同源策意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同源策意义"}},[t._v("#")]),t._v(" 同源策意义")]),t._v(" "),a("p",[t._v("同源策略是为了安全，确保一个应用中的资源只能被本应用的资源访问。")]),t._v(" "),a("p",[t._v("同源策略是浏览器的行为，是为了保护本地数据不被JavaScript代码获取回来的数据污染，因此拦截的是客户端发出的请求回来的数据接收，即请求发送了，服务器响应了，但是无法被浏览器接收。")])])}),[],!1,null,null,null);e.default=v.exports}}]);